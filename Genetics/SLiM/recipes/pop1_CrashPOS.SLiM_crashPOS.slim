initialize() {
        //initializeTreeSeq();
        
        initializeMutationRate(MUTR);
	initializeRecombinationRate(RECR);
	// mutation types: 
	initializeMutationType("m1", 0.5, "f", 0.0); //neutral
	initializeMutationType("m2", 0.5, "f", 0.0); //neutral
	m2.convertToSubstitution = F;
    
	// g1 genomic element type: uses m1 for all mutations
	initializeGenomicElementType("g1", m1, 1.0); //intergenic
	initializeGenomicElementType("g2", m2, 1.0);
    
	//chromosome with a single functional element on one side
	initializeGenomicElement(g1, 0, 49999);
    	initializeGenomicElement(g2, 50000, 50000 + 2560);
    
}


// ancestral pop
1 late() {
	sim.addSubpop("p0", NANC);
	p0.setSelfingRate(SRW);
}

CRASH late() {
        //sim.readFromPopulationFile(treefile);
        // crash of Ntem to NCD inds
        p0.setSubpopulationSize(NCD);
        p0.setSelfingRate(SRD);
	
	muts = sim.mutationsOfType(m2);
	//catn(sim.mutations);
	//catn(sim.mutationFrequencies(p0, muts));
	muts = muts[sim.mutationFrequencies(p0, muts) >= (P_0 - 0.05) | sim.mutationFrequencies(p0, muts) <= (P_0 + 0.05)];
	if (size(muts))
	{
		mut = sample(muts, 1);
		mut.setSelectionCoeff(FS);
	}
	else
	{
		cat("No contender of sufficient frequency found.\n");
	}

}

RECOV {
        // grow NTEM population to current size.
        p0.setSubpopulationSize(NTPN);
	//catn(sim.mutations);
}


// Generation 58000 is the present. Output to VCF.
SAMP late()
{
    p0.outputMSSample(100, F, "*", outfilems, F);
}
//print all fixed mutations
SAMP late(){sim.outputFixedMutations(outfixed, append=F);}
SAMP { }

